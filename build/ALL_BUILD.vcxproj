<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{EFC22F47-8E33-3455-A1E9-2A35A32FDE69}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Users\samba\workspace\sambag\src;E:\Users\samba\workspace\sambag\ext\tinyxml;E:\Users\samba\workspace\sambag\ext\cairo;E:\Users\samba\workspace\sambag\ext\cppunit\include\cppunit\..;E:\Users\samba\libs\boost_1_83_0;E:\Users\samba\workspace\sambag\ext\loki\include;E:\Users\samba\workspace\sambag\ext\lua\src;E:\Users\samba\workspace\sambag\ext\sqlite;E:\Users\samba\workspace\sambag\ext\vstsdk2.4;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\public.sdk\source\vst2.x;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\pluginterfaces\vst2.x;E:\Users\samba\workspace\sambag\ext\VST3;E:\Users\samba\workspace\sambag\ext\VST3\public.sdk\source\vst;E:\Users\samba\workspace\sambag\ext\VST3\pluginterfaces\vst;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Users\samba\workspace\sambag\src;E:\Users\samba\workspace\sambag\ext\tinyxml;E:\Users\samba\workspace\sambag\ext\cairo;E:\Users\samba\workspace\sambag\ext\cppunit\include\cppunit\..;E:\Users\samba\libs\boost_1_83_0;E:\Users\samba\workspace\sambag\ext\loki\include;E:\Users\samba\workspace\sambag\ext\lua\src;E:\Users\samba\workspace\sambag\ext\sqlite;E:\Users\samba\workspace\sambag\ext\vstsdk2.4;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\public.sdk\source\vst2.x;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\pluginterfaces\vst2.x;E:\Users\samba\workspace\sambag\ext\VST3;E:\Users\samba\workspace\sambag\ext\VST3\public.sdk\source\vst;E:\Users\samba\workspace\sambag\ext\VST3\pluginterfaces\vst;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Users\samba\workspace\sambag\src;E:\Users\samba\workspace\sambag\ext\tinyxml;E:\Users\samba\workspace\sambag\ext\cairo;E:\Users\samba\workspace\sambag\ext\cppunit\include\cppunit\..;E:\Users\samba\libs\boost_1_83_0;E:\Users\samba\workspace\sambag\ext\loki\include;E:\Users\samba\workspace\sambag\ext\lua\src;E:\Users\samba\workspace\sambag\ext\sqlite;E:\Users\samba\workspace\sambag\ext\vstsdk2.4;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\public.sdk\source\vst2.x;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\pluginterfaces\vst2.x;E:\Users\samba\workspace\sambag\ext\VST3;E:\Users\samba\workspace\sambag\ext\VST3\public.sdk\source\vst;E:\Users\samba\workspace\sambag\ext\VST3\pluginterfaces\vst;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Users\samba\workspace\sambag\src;E:\Users\samba\workspace\sambag\ext\tinyxml;E:\Users\samba\workspace\sambag\ext\cairo;E:\Users\samba\workspace\sambag\ext\cppunit\include\cppunit\..;E:\Users\samba\libs\boost_1_83_0;E:\Users\samba\workspace\sambag\ext\loki\include;E:\Users\samba\workspace\sambag\ext\lua\src;E:\Users\samba\workspace\sambag\ext\sqlite;E:\Users\samba\workspace\sambag\ext\vstsdk2.4;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\public.sdk\source\vst2.x;E:\Users\samba\workspace\sambag\ext\vstsdk2.4\pluginterfaces\vst2.x;E:\Users\samba\workspace\sambag\ext\VST3;E:\Users\samba\workspace\sambag\ext\VST3\public.sdk\source\vst;E:\Users\samba\workspace\sambag\ext\VST3\pluginterfaces\vst;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Users\samba\workspace\sambag\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/Users/samba/workspace/sambag/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Users/samba/workspace/sambag -BE:/Users/samba/workspace/sambag/build --check-stamp-file E:/Users/samba/workspace/sambag/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindBoost.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeSystem.cmake;E:\Users\samba\workspace\sambag\cmake\FindBoostX.cmake;E:\Users\samba\workspace\sambag\cmake\FindCairo.cmake;E:\Users\samba\workspace\sambag\cmake\FindCppUnitX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLibPngX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLokiX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLua52X.cmake;E:\Users\samba\workspace\sambag\cmake\FindPixmanX.cmake;E:\Users\samba\workspace\sambag\cmake\FindSqlite3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST23X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindZlibX.cmake;E:\Users\samba\workspace\sambag\src\sambag\com\Config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\Users\samba\workspace\sambag\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/Users/samba/workspace/sambag/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Users/samba/workspace/sambag -BE:/Users/samba/workspace/sambag/build --check-stamp-file E:/Users/samba/workspace/sambag/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindBoost.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeSystem.cmake;E:\Users\samba\workspace\sambag\cmake\FindBoostX.cmake;E:\Users\samba\workspace\sambag\cmake\FindCairo.cmake;E:\Users\samba\workspace\sambag\cmake\FindCppUnitX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLibPngX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLokiX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLua52X.cmake;E:\Users\samba\workspace\sambag\cmake\FindPixmanX.cmake;E:\Users\samba\workspace\sambag\cmake\FindSqlite3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST23X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindZlibX.cmake;E:\Users\samba\workspace\sambag\src\sambag\com\Config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Users\samba\workspace\sambag\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/Users/samba/workspace/sambag/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Users/samba/workspace/sambag -BE:/Users/samba/workspace/sambag/build --check-stamp-file E:/Users/samba/workspace/sambag/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindBoost.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeSystem.cmake;E:\Users\samba\workspace\sambag\cmake\FindBoostX.cmake;E:\Users\samba\workspace\sambag\cmake\FindCairo.cmake;E:\Users\samba\workspace\sambag\cmake\FindCppUnitX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLibPngX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLokiX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLua52X.cmake;E:\Users\samba\workspace\sambag\cmake\FindPixmanX.cmake;E:\Users\samba\workspace\sambag\cmake\FindSqlite3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST23X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindZlibX.cmake;E:\Users\samba\workspace\sambag\src\sambag\com\Config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\Users\samba\workspace\sambag\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/Users/samba/workspace/sambag/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Users/samba/workspace/sambag -BE:/Users/samba/workspace/sambag/build --check-stamp-file E:/Users/samba/workspace/sambag/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindBoost.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeCXXCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeRCCompiler.cmake;E:\Users\samba\workspace\sambag\build\CMakeFiles\3.23.1\CMakeSystem.cmake;E:\Users\samba\workspace\sambag\cmake\FindBoostX.cmake;E:\Users\samba\workspace\sambag\cmake\FindCairo.cmake;E:\Users\samba\workspace\sambag\cmake\FindCppUnitX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLibPngX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLokiX.cmake;E:\Users\samba\workspace\sambag\cmake\FindLua52X.cmake;E:\Users\samba\workspace\sambag\cmake\FindPixmanX.cmake;E:\Users\samba\workspace\sambag\cmake\FindSqlite3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST23X.cmake;E:\Users\samba\workspace\sambag\cmake\FindVST3X.cmake;E:\Users\samba\workspace\sambag\cmake\FindZlibX.cmake;E:\Users\samba\workspace\sambag\src\sambag\com\Config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\Users\samba\workspace\sambag\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\ZERO_CHECK.vcxproj">
      <Project>{814B66EA-E485-3FAA-9FF1-55A7C013ECF2}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\src\sambag.vcxproj">
      <Project>{C85A2CFE-69A7-318F-8B06-64369E2A5D15}</Project>
      <Name>sambag</Name>
    </ProjectReference>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\src\testApp.vcxproj">
      <Project>{303BE98C-64EC-39B3-AEC2-94C5C7EEF67C}</Project>
      <Name>testApp</Name>
    </ProjectReference>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\src\test_shm_counterpart.vcxproj">
      <Project>{9DE8D15D-FE00-3A7F-83FA-81429A71F1EF}</Project>
      <Name>test_shm_counterpart</Name>
    </ProjectReference>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\ext\tinyxml\ticpp_ticpp.vcxproj">
      <Project>{93E84E86-6342-3F13-B17F-BDE72ADB8007}</Project>
      <Name>ticpp_ticpp</Name>
    </ProjectReference>
    <ProjectReference Include="E:\Users\samba\workspace\sambag\build\src\unit_tests.vcxproj">
      <Project>{DBC58338-6956-3285-AFF1-ECB36B4F4B1B}</Project>
      <Name>unit_tests</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>